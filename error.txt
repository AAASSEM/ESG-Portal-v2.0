Now the picture is clearer ‚Äî your frontend is calling your backend at

PUT http://localhost:8080/api/companies/16/


and the backend replies with:

403 Forbidden
{"detail":"CSRF Failed: CSRF cookie not set."}


This is a CSRF (Cross-Site Request Forgery) protection error, not a port issue.
Your server (looks like Django REST Framework?) requires a CSRF token for modifying requests (PUT/POST/DELETE).

‚úÖ How to fix

Depending on how your frontend and backend communicate:

1. If using Django + DRF:

Make sure your frontend sends the CSRF token in the request headers.

The backend usually sets a cookie csrftoken. You need to include it in your PUT request.

Example with fetch:

fetch("http://localhost:8080/api/companies/16/", {
  method: "PUT",
  headers: {
    "Content-Type": "application/json",
    "X-CSRFToken": getCookie("csrftoken")  // üîë include CSRF token
  },
  body: JSON.stringify(data),
  credentials: "include"  // üîë allow cookies
});


Helper to read cookies:

function getCookie(name) {
  let cookieValue = null;
  if (document.cookie && document.cookie !== "") {
    const cookies = document.cookie.split(";");
    for (let cookie of cookies) {
      cookie = cookie.trim();
      if (cookie.startsWith(name + "=")) {
        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
        break;
      }
    }
  }
  return cookieValue;
}

2. If this API is for React/SPA only:

You can configure Django REST Framework to skip CSRF checks for APIs, by using SessionAuthentication ‚Üí CSRF exempt, or better, switch to Token / JWT authentication.
Example in Django settings.py:

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
}

3. Quick temporary workaround (not recommended for production):

In Django view, you can disable CSRF:

from django.views.decorators.csrf import csrf_exempt

@csrf_exempt
def my_view(request):
    ...


But ‚ö†Ô∏è this weakens security ‚Äî better to fix cookies/headers.